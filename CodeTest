def banking_system():
    # Get user initials with proper formatting
    pleasantries = input("Good evening! Can I get your initials? ").strip().title()
    balance = 100.00  # Starting balance
    print(f"Alright, {pleasantries}. Your starting balance is ${balance:.2f}.\n")

    while True:
        # Display menu
        print("\nChoose an option:")
        choices = ["Check Balance", "Deposit Money", "Withdraw Money", "Exit"]
        for i, choice in enumerate(choices, start=1):
            print(f"{i}. {choice}")

        try:
            chosen_option = int(input("Enter your choice (1-4): "))

            if chosen_option == 1:
                print(f"Your current balance is: ${balance:.2f}")

            elif chosen_option == 2:
                deposit_amount = float(input("How much would you like to deposit? $"))
                if deposit_amount <= 0:
                    print("Invalid deposit amount. Please enter a positive number.")
                else:
                    balance += deposit_amount
                    print(f"Deposit successful! Your new balance is ${balance:.2f}")

            elif chosen_option == 3:
                withdrawal_amount = float(input("How much would you like to withdraw? $"))
                if withdrawal_amount > balance:
                    print(f"Insufficient funds! Your current balance is ${balance:.2f}.")
                elif withdrawal_amount <= 0:
                    print("Invalid withdrawal amount. Please enter a positive number.")
                else:
                    balance -= withdrawal_amount
                    print(f"Withdrawal successful! Your remaining balance is ${balance:.2f}")

            elif chosen_option == 4:
                print(f"Goodbye, {pleasantries}! Thanks for banking with us.")
                break  # Exit the loop

            else:
                print("Invalid choice. Please select a valid option (1-4).")

        except ValueError:
            print("Invalid input. Please enter a number between 1 and 4.")

# Run the banking system
banking_system()
